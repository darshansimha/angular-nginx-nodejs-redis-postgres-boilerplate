version: "3"
services:
  client:
    container_name: "client"
    image: "client"
    build:
      context: "./client"
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on: 
      - "api"
  nginx:
    container_name: "load-balancer"
    restart: always
    build: ./nginx
    depends_on: 
      - client
    ports:
      - 80:80
  api:
    build: "./server"
    image: "api"
    container_name: "backend"
    restart: unless-stopped
    command: "npm start"
    volumes:
      - ./server:/usr/app/
      - /usr/app/node_modules
    environment:
      REDIS_PORT: 6379
      REDIS_HOST: redis
      PORT: 7000
      JWT_SECRET: Some!Password!
      SERVER_CODE: dev
      DATA_CENTER: local
      ENVIRONMENT: DEV
    depends_on:
      - "redis"
  redis-commander:
      container_name: redis-viewer
      hostname: redis-commander
      image: rediscommander/redis-commander:latest
      restart: always
      environment:
      - REDIS_HOSTS=local:redis:6379
      ports:
      - "8081:8081"
  redis:
    image: "redis:alpine"
    container_name: redis-cache
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    volumes:
      - "redis_data:/root/redis/data"
  postgres:
    container_name: "pg-db"
    image: postgres:11.5-alpine
    hostname: postgres
    ports:
      - "6543:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: TEST_SM
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: "pg-db-viewer"
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped
networks:
  postgres:
    driver: bridge
volumes:
  postgres-data:
  redis_data: